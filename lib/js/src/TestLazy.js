// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Arrow = require("./Arrow.js");
var Curry = require("bs-platform/lib/js/curry.js");

function pure(a) {
  return Arrow.pure(function (param) {
              return a;
            });
}

function map(mA, aToB) {
  return Curry._2(Arrow.Impl.Infix.$great$great$caret, mA, aToB);
}

function bind(mA, aToMB) {
  var arrowAb = Arrow.pure(function (a) {
        return Arrow.runF(Curry._1(aToMB, a), undefined);
      });
  return Curry._2(Arrow.Impl.Infix.$great$great$great, mA, arrowAb);
}

function $$eval(__x) {
  return Arrow.runF(__x, undefined);
}

var Lazy = {
  pure: pure,
  defer: Arrow.pure,
  map: map,
  bind: bind,
  $$eval: $$eval
};

function runTest(param) {
  var lazyVal = Arrow.pure(function (param) {
        return 0;
      });
  for(var i = 1; i <= 1000000; ++i){
    if (i % 100000 === 0) {
      console.log(i);
    }
    lazyVal = bind(map(lazyVal, (function (n) {
                return n + 1 | 0;
              })), (function (n) {
            return Arrow.pure(function (param) {
                        return n + 1 | 0;
                      });
          }));
  }
  var computation = lazyVal;
  console.log(computation);
  var result = Arrow.runF(computation, undefined);
  console.log(result);
  
}

runTest(undefined);

runTest(undefined);

runTest(undefined);

exports.Lazy = Lazy;
exports.runTest = runTest;
/*  Not a pure module */
